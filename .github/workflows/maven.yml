name: Java Maven

# https://github.com/laboratoriobridge/metafy/blob/d2f4fd53ef3783140cece9d5f2a57045304266dc/.github/workflows/maven.yml
on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      - master         # Push events on master branch
      - 'releases/*'   # Push events to branches matching refs/heads/releases/*
      - 'refs/tags/*'  # Push events to branches matching refs/heads/tags/*
      - '!refs/pull/*' # Push events on branches that do not match refs/pull/*
  pull_request:
    branches:
      - master

jobs:
  test:
    name: CI on JDK ${{ matrix.java_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java_version: ['1.8', '1.11']
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java_version }}
      # https://docs.github.com/en/actions/guides/building-and-testing-java-with-maven#caching-dependencies
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-java${{ matrix.java_version }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-java${{ matrix.java_version }}-m2
      - name: Build with Maven
        run: |
          mvn clean verify -Pcoverage -Ppack --file pom.xml --batch-mode -Dsytle.colors=always --errors
      - name: Codecov upload
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./dbeam-core/target/site/jacoco/jacoco.xml
          flags: unittests # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)
      - name: End to end tests
        run: ./e2e/e2e.sh
      - run: mkdir staging && cp **/target/*.jar ./staging
      - uses: actions/upload-artifact@v2
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' && matrix.java_version == '1.8'
        with:
          name: Package
          path: staging
        # # https://github.com/arduino/arduino-cli/blob/5e1627de181e6737a874c8b3ea356cec248cc74c/.github/workflows/test.yaml
        # # https://github.com/softprops/action-gh-release
        # Disable sonatype deploy, as it requires further gpg config
      - name: Deploy
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' && matrix.java_version == '1.8'
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}
          GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export GPG_TTY=$(tty)
          export DISPLAY=:0
          gpg --version
          echo "$GPG_KEY" | base64 --decode --ignore-garbage | gpg --batch --fast-import -
          gpg --list-secret-keys --keyid-format LONG
          echo "test" | gpg --batch --clearsign --pinentry-mode loopback || true
          mvn --settings ./github-settings.xml -DskipTests deploy --batch-mode -Dsytle.colors=always --errors
          rm -rf ~/.gnupg
      - name: Release
        uses: docker://softprops/action-gh-release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && matrix.java_version == '1.8'
        with:
          # body_path: ${{ github.workflow }}-CHANGELOG.txt
          files: './dbeam-core/target/dbeam-core-*.jar,./dbeam-core/target/dbeam-core-*.jar.asc'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
